@page
@model ExternalLoginsModel
@{
    ViewData["Title"] = "Manage your external logins";
    ViewData["ActivePage"] = ManageNavPages.ExternalLogins;

    string[] mainProviders = new[] { "DeviantArt", "Twitter", "Tumblr" };
}

<partial name="_StatusMessage" for="StatusMessage" />
@if (Model.CurrentLogins?.Count > 0)
{
    <h4>Registered Logins</h4>
    <table class="table">
        <tbody>
            @foreach (var login in Model.CurrentLogins)
            {
                <tr>
                    <td>@login.ProviderDisplayName</td>
                    <td>
                        @if (Model.ShowRemoveButton)
                        {
                            <form id="remove-login" asp-page-handler="RemoveLogin" method="post">
                                <div>
                                    <input asp-for="@login.LoginProvider" name="LoginProvider" type="hidden" />
                                    <input asp-for="@login.ProviderKey" name="ProviderKey" type="hidden" />
                                    <button type="submit" class="btn btn-primary" title="Remove this @login.ProviderDisplayName login from your account">Remove</button>
                                </div>
                            </form>
                        }
                        else
                        {
                            @: &nbsp;
                        }
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
@if (Model.OtherLogins?.Count > 0)
{
    <h4>Add another service to log in.</h4>
    <hr />
    <form id="link-login-form" asp-page-handler="LinkLogin" method="post" class="form-horizontal">
        <div id="socialLoginList">
            <p>
                @foreach (var provider in Model.OtherLogins.Where(x => mainProviders.Contains(x.Name)))
                {
                    <button id="link-login-button" type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                }
                <span class="dropdown">
                    <button class="btn btn-secondary dropdown-toggle" type="button" id="otherProviders" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                        Other
                    </button>
                    <span class="dropdown-menu" aria-labelledby="otherProviders">
                        @foreach (var provider in Model.OtherLogins.Where(x => !mainProviders.Contains(x.Name))) {
                            <button type="submit" class="btn btn-link" name="provider" value="@provider.Name" title="Log in using your @provider.DisplayName account">@provider.DisplayName</button>
                        }
                    </span>
                </span>
            </p>
        </div>
    </form>
}