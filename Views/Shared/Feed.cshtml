@model ArtworkInbox.Models.FeedViewModel
@{
    ViewData["Title"] = "Feed";
}

<style type="text/css">
    h1 {
        margin-bottom: 1rem;
    }
    img.feed-image {
        width: 150px;
        height: 150px;
    }
    @@supports (object-fit: contain) {
        img.feed-image {
            width: 100%;
            object-fit: contain;
        }
    }
</style>

<div>
    <h5 class="card-title">
        @if (Model.AuthenticatedUser.AvatarUrl != null) {
            <img src="@Model.AuthenticatedUser.AvatarUrl" width="50" height="50" />
        }
        @Model.AuthenticatedUser.Username
    </h5>
    <a href="@Model.AuthenticatedUser.ProfileUrl" target="_blank">Profile</a>
    &middot;
    <a href="@Model.NotificationsUrl" target="_blank">
        Notifications
        @if (Model.NotificationsCount != null) {
            @:(@Model.NotificationsCount)
        }
    </a>
    &middot;
    <a href="@Model.SubmitUrl" target="_blank">Submit</a>
</div>

<hr />

@if (Model.FeedBatch.HasMore) {
    <div class="alert alert-primary">
        There are too many items in your activity feed to display on one page.
        Showing the @Model.FeedBatch.FeedItems.Count() most recent items.
        <br />
    </div>
}

@if (!Model.FeedBatch.FeedItems.Any()) {
    <div class="alert alert-secondary">
        There are no new items to display in your activity feed.
    </div>
}

@foreach (var g in Model.ArtworkByUser) {
    <h1>@g.Key</h1>
    <div class="container-fluid">
        <div class="row">
            @foreach (var d in g) {
                <div class="col-md-3 text-center my-4">
                    <a href="@d.LinkUrl">
                        <img src="@(d.ThumbnailUrl ?? "/images/no-thumb.svg")"
                             srcset="@d.Srcset"
                             alt=""
                             referrerpolicy="no-referrer"
                             class="feed-image" />
                        @if (d.RepostedFrom != null) {
                            @:Reposted from @d.RepostedFrom
                            <br />
                        }
                        @d.Title
                    </a>
                </div>
            }
        </div>
    </div>
    <hr />
}

@if (Model.JournalsByUser.Any()) {
    <h1>Journal Entries</h1>
    @foreach (var g in Model.JournalsByUser) {
        <p class="font-weight-bold">@g.Key</p>
        @foreach (var d in g) {
            <p style="white-space: nowrap; overflow-x: hidden; text-overflow: ellipsis">
                <a href="@d.LinkUrl">
                    <strong>@d.Author.Username:</strong>
                </a>
                <span class="html-to-convert">@d.Excerpt</span>
            </p>
        }
    }
    <hr />
}

@if (Model.BlogPostsByUser.Any()) {
    <h1>Blog Posts</h1>
    @foreach (var g in Model.BlogPostsByUser) {
        <p class="font-weight-bold">@g.Key</p>
        foreach (var s in g) {
            <p style="white-space: nowrap; overflow-x: hidden; text-overflow: ellipsis">
                <a href="@s.LinkUrl">
                    <strong>@s.Author.Username:</strong>
                </a>
                <span class="html-to-convert">@s.Excerpt</span>
            </p>
        }
    }
    <hr />
}

@if (Model.StatusesByUser.Any()) {
    <h1>Status Updates</h1>
    @foreach (var g in Model.StatusesByUser) {
        <p class="font-weight-bold">@g.Key</p>
        foreach (var s in g) {
            <p style="white-space: nowrap; overflow-x: hidden; text-overflow: ellipsis">
                <a href="@s.LinkUrl">
                    <strong>@s.Author.Username:</strong>
                </a>
                <span class="html-to-convert">@s.Excerpt</span>
            </p>
        }
    }
    <hr />
}

@foreach (var i in Model.Misc) {
    <p>
        @i.GetDescription()
    </p>
    <hr />
}

@if (Model.FeedBatch.Cursor != null && Model.FeedBatch.HasMore) {
    <p>
        <a class="btn btn-primary" href="Feed?host=@Model.Host&cursor=@Model.FeedBatch.Cursor&latest=@Uri.EscapeDataString(Model.Latest.ToString("o"))">
            Next page &raquo;
        </a>
    </p>
    <hr />
}

@if (Model.FeedBatch.FeedItems.Any()) {
    <p>
        <a class="btn btn-danger" href="MarkAsRead?host=@Model.Host&latest=@Uri.EscapeDataString(Model.Latest.ToString("o"))">
            Mark all as read
        </a>
        <br />
        <span class="small text-muted">
            This will not clear old activity from your feed, but it will hide it from this app.
        </span>
    </p>
}

<script type="text/javascript">
    var to_convert = document.getElementsByClassName("html-to-convert");
    var div = document.createElement("div");
    for (var i = 0; i < to_convert.length; i++) {
        div.innerHTML = to_convert[i].innerText;

        // Add spaces between paragraphs
        for (var j = div.children.length - 1; j >= 0; j--) {
            div.insertBefore(document.createTextNode(" "), div.children[j]);
        }

        to_convert[i].innerText = div.innerText;
    }
</script>